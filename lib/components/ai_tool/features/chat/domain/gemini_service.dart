// import the gemini_repository from the chat data folder
// this repository handles interactions with the gemini generative ai model
import 'package:towers/components/ai_tool/features/chat/data/gemini_repository.dart'; // for gemini model repository


// define a class named 'GeminiService'
// this service acts as a layer between the ui and the repository, managing the data flow
class GeminiService {  // service class for handling gemini model operations

  // declare a final variable for the geminirepository
  // this repository instance will be used to interact with the gemini model
  final GeminiRepository repository;  // repository instance for gemini model


  // constructor for the geminiservice class
  // it initializes the service with the given repository instance
  GeminiService(this.repository);  // constructor to initialize the geminiservice with a repository


  // define a method to get the generated response from the repository
  // this method takes an input text and returns the model's generated response
  Future<String> getGeneratedResponse(String inputText) {  // method to fetch the response from gemini model

    // call the generateResponse method from the repository
    // this sends the input text to the repository to get the model's response
    return repository.generateResponse(inputText);  // return the response generated by the repository

  }  // end of getGeneratedResponse method

}  // end of geminiservice class